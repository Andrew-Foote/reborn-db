insert into "growth_rate" ("name", "pbs_name", "order", "python_formula", "latex_formula")
values
('Erratic', 'Erratic', 1,
	'math.floor(level ** 3 * ((level * 6 // 10) / 100))',
	'\left \lfloor \frac {\ell^3 \lfloor 6\ell/10 \rfloor} {100} \right \rfloor'
),
('Fast', 'Fast', 2,
	'4 * level ** 3 // 5',
	'\left \lfloor \frac {4\ell^3} 5 \right \rfloor'
),
('Medium Fast', 'Medium', 3,
	'level ** 3',
	'\ell^3'
),
('Medium Slow', 'Parabolic', 4,
	'6 * level ** 3 // 5 - 15 * level ** 2 + 100 * level - 140',
	'\left \lfloor \frac {6\ell^3} 5 \right \rfloor - 15\ell^2 + 100\ell - 140'
),
('Slow', 'Slow', 5,
	'5 * level ** 3 // 4',
	'\left \lfloor \frac {5\ell^3} 4 \right \rfloor'
),
('Fluctuating', 'Fluctuating', 6,
	'math.floor(level ** 3 *((level * max(40, 82 - max(0, (level - 100)/2)) // 100) / 50))',
	'\left \lfloor \frac {\ell^3 \lfloor \max(40, 82 - \max(0, (\ell - 100)/2)) \ell \rfloor/100} {50} \right \rfloor'
);

insert into "level_exp" ("growth_rate", "level", "exp")
values
('Medium Fast', 0, -1),
('Medium Fast', 1, 0),
('Medium Fast', 2, 8),
('Medium Fast', 3, 27),
('Medium Fast', 4, 64),
('Medium Fast', 5, 125),
('Medium Fast', 6, 216),
('Medium Fast', 7, 343),
('Medium Fast', 8, 512),
('Medium Fast', 9, 729),
('Medium Fast', 10, 1000),
('Medium Fast', 11, 1331),
('Medium Fast', 12, 1728),
('Medium Fast', 13, 2197),
('Medium Fast', 14, 2744),
('Medium Fast', 15, 3375),
('Medium Fast', 16, 4096),
('Medium Fast', 17, 4913),
('Medium Fast', 18, 5832),
('Medium Fast', 19, 6859),
('Medium Fast', 20, 8000),
('Medium Fast', 21, 9261),
('Medium Fast', 22, 10648),
('Medium Fast', 23, 12167),
('Medium Fast', 24, 13824),
('Medium Fast', 25, 15625),
('Medium Fast', 26, 17576),
('Medium Fast', 27, 19683),
('Medium Fast', 28, 21952),
('Medium Fast', 29, 24389),
('Medium Fast', 30, 27000),
('Medium Fast', 31, 29791),
('Medium Fast', 32, 32768),
('Medium Fast', 33, 35937),
('Medium Fast', 34, 39304),
('Medium Fast', 35, 42875),
('Medium Fast', 36, 46656),
('Medium Fast', 37, 50653),
('Medium Fast', 38, 54872),
('Medium Fast', 39, 59319),
('Medium Fast', 40, 64000),
('Medium Fast', 41, 68921),
('Medium Fast', 42, 74088),
('Medium Fast', 43, 79507),
('Medium Fast', 44, 85184),
('Medium Fast', 45, 91125),
('Medium Fast', 46, 97336),
('Medium Fast', 47, 103823),
('Medium Fast', 48, 110592),
('Medium Fast', 49, 117649),
('Medium Fast', 50, 125000),
('Medium Fast', 51, 132651),
('Medium Fast', 52, 140608),
('Medium Fast', 53, 148877),
('Medium Fast', 54, 157464),
('Medium Fast', 55, 166375),
('Medium Fast', 56, 175616),
('Medium Fast', 57, 185193),
('Medium Fast', 58, 195112),
('Medium Fast', 59, 205379),
('Medium Fast', 60, 216000),
('Medium Fast', 61, 226981),
('Medium Fast', 62, 238328),
('Medium Fast', 63, 250047),
('Medium Fast', 64, 262144),
('Medium Fast', 65, 274625),
('Medium Fast', 66, 287496),
('Medium Fast', 67, 300763),
('Medium Fast', 68, 314432),
('Medium Fast', 69, 328509),
('Medium Fast', 70, 343000),
('Medium Fast', 71, 357911),
('Medium Fast', 72, 373248),
('Medium Fast', 73, 389017),
('Medium Fast', 74, 405224),
('Medium Fast', 75, 421875),
('Medium Fast', 76, 438976),
('Medium Fast', 77, 456533),
('Medium Fast', 78, 474552),
('Medium Fast', 79, 493039),
('Medium Fast', 80, 512000),
('Medium Fast', 81, 531441),
('Medium Fast', 82, 551368),
('Medium Fast', 83, 571787),
('Medium Fast', 84, 592704),
('Medium Fast', 85, 614125),
('Medium Fast', 86, 636056),
('Medium Fast', 87, 658503),
('Medium Fast', 88, 681472),
('Medium Fast', 89, 704969),
('Medium Fast', 90, 729000),
('Medium Fast', 91, 753571),
('Medium Fast', 92, 778688),
('Medium Fast', 93, 804357),
('Medium Fast', 94, 830584),
('Medium Fast', 95, 857375),
('Medium Fast', 96, 884736),
('Medium Fast', 97, 912673),
('Medium Fast', 98, 941192),
('Medium Fast', 99, 970299),
('Medium Fast', 100, 1000000),
('Erratic', 0, -1),
('Erratic', 1, 0),
('Erratic', 2, 15),
('Erratic', 3, 52),
('Erratic', 4, 122),
('Erratic', 5, 237),
('Erratic', 6, 406),
('Erratic', 7, 637),
('Erratic', 8, 942),
('Erratic', 9, 1326),
('Erratic', 10, 1800),
('Erratic', 11, 2369),
('Erratic', 12, 3041),
('Erratic', 13, 3822),
('Erratic', 14, 4719),
('Erratic', 15, 5737),
('Erratic', 16, 6881),
('Erratic', 17, 8155),
('Erratic', 18, 9564),
('Erratic', 19, 11111),
('Erratic', 20, 12800),
('Erratic', 21, 14632),
('Erratic', 22, 16610),
('Erratic', 23, 18737),
('Erratic', 24, 21012),
('Erratic', 25, 23437),
('Erratic', 26, 26012),
('Erratic', 27, 28737),
('Erratic', 28, 31610),
('Erratic', 29, 34632),
('Erratic', 30, 37800),
('Erratic', 31, 41111),
('Erratic', 32, 44564),
('Erratic', 33, 48155),
('Erratic', 34, 51881),
('Erratic', 35, 55737),
('Erratic', 36, 59719),
('Erratic', 37, 63822),
('Erratic', 38, 68041),
('Erratic', 39, 72369),
('Erratic', 40, 76800),
('Erratic', 41, 81326),
('Erratic', 42, 85942),
('Erratic', 43, 90637),
('Erratic', 44, 95406),
('Erratic', 45, 100237),
('Erratic', 46, 105122),
('Erratic', 47, 110052),
('Erratic', 48, 115015),
('Erratic', 49, 120001),
('Erratic', 50, 125000),
('Erratic', 51, 131324),
('Erratic', 52, 137795),
('Erratic', 53, 144410),
('Erratic', 54, 151165),
('Erratic', 55, 158056),
('Erratic', 56, 165079),
('Erratic', 57, 172229),
('Erratic', 58, 179503),
('Erratic', 59, 186894),
('Erratic', 60, 194400),
('Erratic', 61, 202013),
('Erratic', 62, 209728),
('Erratic', 63, 217540),
('Erratic', 64, 225443),
('Erratic', 65, 233431),
('Erratic', 66, 241496),
('Erratic', 67, 249633),
('Erratic', 68, 257834),
('Erratic', 69, 267406),
('Erratic', 70, 276458),
('Erratic', 71, 286328),
('Erratic', 72, 296358),
('Erratic', 73, 305767),
('Erratic', 74, 316074),
('Erratic', 75, 326531),
('Erratic', 76, 336255),
('Erratic', 77, 346965),
('Erratic', 78, 357812),
('Erratic', 79, 367807),
('Erratic', 80, 378880),
('Erratic', 81, 390077),
('Erratic', 82, 400293),
('Erratic', 83, 411686),
('Erratic', 84, 423190),
('Erratic', 85, 433572),
('Erratic', 86, 445239),
('Erratic', 87, 457001),
('Erratic', 88, 467489),
('Erratic', 89, 479378),
('Erratic', 90, 491346),
('Erratic', 91, 501878),
('Erratic', 92, 513934),
('Erratic', 93, 526049),
('Erratic', 94, 536557),
('Erratic', 95, 548720),
('Erratic', 96, 560922),
('Erratic', 97, 571333),
('Erratic', 98, 583539),
('Erratic', 99, 591882),
('Erratic', 100, 600000),
('Fluctuating', 0, -1),
('Fluctuating', 1, 0),
('Fluctuating', 2, 4),
('Fluctuating', 3, 13),
('Fluctuating', 4, 32),
('Fluctuating', 5, 65),
('Fluctuating', 6, 112),
('Fluctuating', 7, 178),
('Fluctuating', 8, 276),
('Fluctuating', 9, 393),
('Fluctuating', 10, 540),
('Fluctuating', 11, 745),
('Fluctuating', 12, 967),
('Fluctuating', 13, 1230),
('Fluctuating', 14, 1591),
('Fluctuating', 15, 1957),
('Fluctuating', 16, 2457),
('Fluctuating', 17, 3046),
('Fluctuating', 18, 3732),
('Fluctuating', 19, 4526),
('Fluctuating', 20, 5440),
('Fluctuating', 21, 6482),
('Fluctuating', 22, 7666),
('Fluctuating', 23, 9003),
('Fluctuating', 24, 10506),
('Fluctuating', 25, 12187),
('Fluctuating', 26, 14060),
('Fluctuating', 27, 16140),
('Fluctuating', 28, 18439),
('Fluctuating', 29, 20974),
('Fluctuating', 30, 23760),
('Fluctuating', 31, 26811),
('Fluctuating', 32, 30146),
('Fluctuating', 33, 33780),
('Fluctuating', 34, 37731),
('Fluctuating', 35, 42017),
('Fluctuating', 36, 46656),
('Fluctuating', 37, 50653),
('Fluctuating', 38, 55969),
('Fluctuating', 39, 60505),
('Fluctuating', 40, 66560),
('Fluctuating', 41, 71677),
('Fluctuating', 42, 78533),
('Fluctuating', 43, 84277),
('Fluctuating', 44, 91998),
('Fluctuating', 45, 98415),
('Fluctuating', 46, 107069),
('Fluctuating', 47, 114205),
('Fluctuating', 48, 123863),
('Fluctuating', 49, 131766),
('Fluctuating', 50, 142500),
('Fluctuating', 51, 151222),
('Fluctuating', 52, 163105),
('Fluctuating', 53, 172697),
('Fluctuating', 54, 185807),
('Fluctuating', 55, 196322),
('Fluctuating', 56, 210739),
('Fluctuating', 57, 222231),
('Fluctuating', 58, 238036),
('Fluctuating', 59, 250562),
('Fluctuating', 60, 267840),
('Fluctuating', 61, 281456),
('Fluctuating', 62, 300293),
('Fluctuating', 63, 315059),
('Fluctuating', 64, 335544),
('Fluctuating', 65, 351520),
('Fluctuating', 66, 373744),
('Fluctuating', 67, 390991),
('Fluctuating', 68, 415050),
('Fluctuating', 69, 433631),
('Fluctuating', 70, 459620),
('Fluctuating', 71, 479600),
('Fluctuating', 72, 507617),
('Fluctuating', 73, 529063),
('Fluctuating', 74, 559209),
('Fluctuating', 75, 582187),
('Fluctuating', 76, 614566),
('Fluctuating', 77, 639146),
('Fluctuating', 78, 673863),
('Fluctuating', 79, 700115),
('Fluctuating', 80, 737280),
('Fluctuating', 81, 765275),
('Fluctuating', 82, 804997),
('Fluctuating', 83, 834809),
('Fluctuating', 84, 877201),
('Fluctuating', 85, 908905),
('Fluctuating', 86, 954084),
('Fluctuating', 87, 987754),
('Fluctuating', 88, 1035837),
('Fluctuating', 89, 1071552),
('Fluctuating', 90, 1122660),
('Fluctuating', 91, 1160499),
('Fluctuating', 92, 1214753),
('Fluctuating', 93, 1254796),
('Fluctuating', 94, 1312322),
('Fluctuating', 95, 1354652),
('Fluctuating', 96, 1415577),
('Fluctuating', 97, 1460276),
('Fluctuating', 98, 1524731),
('Fluctuating', 99, 1571884),
('Fluctuating', 100, 1640000),
('Medium Slow', 0, -1),
('Medium Slow', 1, 0),
('Medium Slow', 2, 9),
('Medium Slow', 3, 57),
('Medium Slow', 4, 96),
('Medium Slow', 5, 135),
('Medium Slow', 6, 179),
('Medium Slow', 7, 236),
('Medium Slow', 8, 314),
('Medium Slow', 9, 419),
('Medium Slow', 10, 560),
('Medium Slow', 11, 742),
('Medium Slow', 12, 973),
('Medium Slow', 13, 1261),
('Medium Slow', 14, 1612),
('Medium Slow', 15, 2035),
('Medium Slow', 16, 2535),
('Medium Slow', 17, 3120),
('Medium Slow', 18, 3798),
('Medium Slow', 19, 4575),
('Medium Slow', 20, 5460),
('Medium Slow', 21, 6458),
('Medium Slow', 22, 7577),
('Medium Slow', 23, 8825),
('Medium Slow', 24, 10208),
('Medium Slow', 25, 11735),
('Medium Slow', 26, 13411),
('Medium Slow', 27, 15244),
('Medium Slow', 28, 17242),
('Medium Slow', 29, 19411),
('Medium Slow', 30, 21760),
('Medium Slow', 31, 24294),
('Medium Slow', 32, 27021),
('Medium Slow', 33, 29949),
('Medium Slow', 34, 33084),
('Medium Slow', 35, 36435),
('Medium Slow', 36, 40007),
('Medium Slow', 37, 43808),
('Medium Slow', 38, 47846),
('Medium Slow', 39, 52127),
('Medium Slow', 40, 56660),
('Medium Slow', 41, 61450),
('Medium Slow', 42, 66505),
('Medium Slow', 43, 71833),
('Medium Slow', 44, 77440),
('Medium Slow', 45, 83335),
('Medium Slow', 46, 89523),
('Medium Slow', 47, 96012),
('Medium Slow', 48, 102810),
('Medium Slow', 49, 109923),
('Medium Slow', 50, 117360),
('Medium Slow', 51, 125126),
('Medium Slow', 52, 133229),
('Medium Slow', 53, 141677),
('Medium Slow', 54, 150476),
('Medium Slow', 55, 159635),
('Medium Slow', 56, 169159),
('Medium Slow', 57, 179056),
('Medium Slow', 58, 189334),
('Medium Slow', 59, 199999),
('Medium Slow', 60, 211060),
('Medium Slow', 61, 222522),
('Medium Slow', 62, 234393),
('Medium Slow', 63, 246681),
('Medium Slow', 64, 259392),
('Medium Slow', 65, 272535),
('Medium Slow', 66, 286115),
('Medium Slow', 67, 300140),
('Medium Slow', 68, 314618),
('Medium Slow', 69, 329555),
('Medium Slow', 70, 344960),
('Medium Slow', 71, 360838),
('Medium Slow', 72, 377197),
('Medium Slow', 73, 394045),
('Medium Slow', 74, 411388),
('Medium Slow', 75, 429235),
('Medium Slow', 76, 447591),
('Medium Slow', 77, 466464),
('Medium Slow', 78, 485862),
('Medium Slow', 79, 505791),
('Medium Slow', 80, 526260),
('Medium Slow', 81, 547274),
('Medium Slow', 82, 568841),
('Medium Slow', 83, 590969),
('Medium Slow', 84, 613664),
('Medium Slow', 85, 636935),
('Medium Slow', 86, 660787),
('Medium Slow', 87, 685228),
('Medium Slow', 88, 710266),
('Medium Slow', 89, 735907),
('Medium Slow', 90, 762160),
('Medium Slow', 91, 789030),
('Medium Slow', 92, 816525),
('Medium Slow', 93, 844653),
('Medium Slow', 94, 873420),
('Medium Slow', 95, 902835),
('Medium Slow', 96, 932903),
('Medium Slow', 97, 963632),
('Medium Slow', 98, 995030),
('Medium Slow', 99, 1027103),
('Medium Slow', 100, 1059860),
('Fast', 0, -1),
('Fast', 1, 0),
('Fast', 2, 6),
('Fast', 3, 21),
('Fast', 4, 51),
('Fast', 5, 100),
('Fast', 6, 172),
('Fast', 7, 274),
('Fast', 8, 409),
('Fast', 9, 583),
('Fast', 10, 800),
('Fast', 11, 1064),
('Fast', 12, 1382),
('Fast', 13, 1757),
('Fast', 14, 2195),
('Fast', 15, 2700),
('Fast', 16, 3276),
('Fast', 17, 3930),
('Fast', 18, 4665),
('Fast', 19, 5487),
('Fast', 20, 6400),
('Fast', 21, 7408),
('Fast', 22, 8518),
('Fast', 23, 9733),
('Fast', 24, 11059),
('Fast', 25, 12500),
('Fast', 26, 14060),
('Fast', 27, 15746),
('Fast', 28, 17561),
('Fast', 29, 19511),
('Fast', 30, 21600),
('Fast', 31, 23832),
('Fast', 32, 26214),
('Fast', 33, 28749),
('Fast', 34, 31443),
('Fast', 35, 34300),
('Fast', 36, 37324),
('Fast', 37, 40522),
('Fast', 38, 43897),
('Fast', 39, 47455),
('Fast', 40, 51200),
('Fast', 41, 55136),
('Fast', 42, 59270),
('Fast', 43, 63605),
('Fast', 44, 68147),
('Fast', 45, 72900),
('Fast', 46, 77868),
('Fast', 47, 83058),
('Fast', 48, 88473),
('Fast', 49, 94119),
('Fast', 50, 100000),
('Fast', 51, 106120),
('Fast', 52, 112486),
('Fast', 53, 119101),
('Fast', 54, 125971),
('Fast', 55, 133100),
('Fast', 56, 140492),
('Fast', 57, 148154),
('Fast', 58, 156089),
('Fast', 59, 164303),
('Fast', 60, 172800),
('Fast', 61, 181584),
('Fast', 62, 190662),
('Fast', 63, 200037),
('Fast', 64, 209715),
('Fast', 65, 219700),
('Fast', 66, 229996),
('Fast', 67, 240610),
('Fast', 68, 251545),
('Fast', 69, 262807),
('Fast', 70, 274400),
('Fast', 71, 286328),
('Fast', 72, 298598),
('Fast', 73, 311213),
('Fast', 74, 324179),
('Fast', 75, 337500),
('Fast', 76, 351180),
('Fast', 77, 365226),
('Fast', 78, 379641),
('Fast', 79, 394431),
('Fast', 80, 409600),
('Fast', 81, 425152),
('Fast', 82, 441094),
('Fast', 83, 457429),
('Fast', 84, 474163),
('Fast', 85, 491300),
('Fast', 86, 508844),
('Fast', 87, 526802),
('Fast', 88, 545177),
('Fast', 89, 563975),
('Fast', 90, 583200),
('Fast', 91, 602856),
('Fast', 92, 622950),
('Fast', 93, 643485),
('Fast', 94, 664467),
('Fast', 95, 685900),
('Fast', 96, 707788),
('Fast', 97, 730138),
('Fast', 98, 752953),
('Fast', 99, 776239),
('Fast', 100, 800000),
('Slow', 0, -1),
('Slow', 1, 0),
('Slow', 2, 10),
('Slow', 3, 33),
('Slow', 4, 80),
('Slow', 5, 156),
('Slow', 6, 270),
('Slow', 7, 428),
('Slow', 8, 640),
('Slow', 9, 911),
('Slow', 10, 1250),
('Slow', 11, 1663),
('Slow', 12, 2160),
('Slow', 13, 2746),
('Slow', 14, 3430),
('Slow', 15, 4218),
('Slow', 16, 5120),
('Slow', 17, 6141),
('Slow', 18, 7290),
('Slow', 19, 8573),
('Slow', 20, 10000),
('Slow', 21, 11576),
('Slow', 22, 13310),
('Slow', 23, 15208),
('Slow', 24, 17280),
('Slow', 25, 19531),
('Slow', 26, 21970),
('Slow', 27, 24603),
('Slow', 28, 27440),
('Slow', 29, 30486),
('Slow', 30, 33750),
('Slow', 31, 37238),
('Slow', 32, 40960),
('Slow', 33, 44921),
('Slow', 34, 49130),
('Slow', 35, 53593),
('Slow', 36, 58320),
('Slow', 37, 63316),
('Slow', 38, 68590),
('Slow', 39, 74148),
('Slow', 40, 80000),
('Slow', 41, 86151),
('Slow', 42, 92610),
('Slow', 43, 99383),
('Slow', 44, 106480),
('Slow', 45, 113906),
('Slow', 46, 121670),
('Slow', 47, 129778),
('Slow', 48, 138240),
('Slow', 49, 147061),
('Slow', 50, 156250),
('Slow', 51, 165813),
('Slow', 52, 175760),
('Slow', 53, 186096),
('Slow', 54, 196830),
('Slow', 55, 207968),
('Slow', 56, 219520),
('Slow', 57, 231491),
('Slow', 58, 243890),
('Slow', 59, 256723),
('Slow', 60, 270000),
('Slow', 61, 283726),
('Slow', 62, 297910),
('Slow', 63, 312558),
('Slow', 64, 327680),
('Slow', 65, 343281),
('Slow', 66, 359370),
('Slow', 67, 375953),
('Slow', 68, 393040),
('Slow', 69, 410636),
('Slow', 70, 428750),
('Slow', 71, 447388),
('Slow', 72, 466560),
('Slow', 73, 486271),
('Slow', 74, 506530),
('Slow', 75, 527343),
('Slow', 76, 548720),
('Slow', 77, 570666),
('Slow', 78, 593190),
('Slow', 79, 616298),
('Slow', 80, 640000),
('Slow', 81, 664301),
('Slow', 82, 689210),
('Slow', 83, 714733),
('Slow', 84, 740880),
('Slow', 85, 767656),
('Slow', 86, 795070),
('Slow', 87, 823128),
('Slow', 88, 851840),
('Slow', 89, 881211),
('Slow', 90, 911250),
('Slow', 91, 941963),
('Slow', 92, 973360),
('Slow', 93, 1005446),
('Slow', 94, 1038230),
('Slow', 95, 1071718),
('Slow', 96, 1105920),
('Slow', 97, 1140841),
('Slow', 98, 1176490),
('Slow', 99, 1212873),
('Slow', 100, 1250000);

insert into "habitat" ("name", "pbs_name", "order")
values
('Grassland', 'Grassland', 1),
('Forest', 'Forest', 2),
('Water''s-edge', 'WatersEdge', 3),
('Sea', 'Sea', 4),
('Cave', 'Cave', 5),
('Mountain', 'Mountain', 6),
('Rough-terrain', 'RoughTerrain', 7),
('Urban', 'Urban', 8),
('Rare', 'Rare', 9);

insert into "egg_group" ("name", "pbs_name", "order")
values
('Monster', 'Monster', 1),
('Water 1', 'Water1', 2),
('Bug', 'Bug', 3),
('Flying', 'Flying', 4),
('Field', 'Field', 5),
('Fairy', 'Fairy', 6),
('Grass', 'Grass', 7),
('Human-Like', 'Humanlike', 8),
('Water 3', 'Water3', 9),
('Mineral', 'Mineral', 10),
('Amorphous', 'Amorphous', 11),
('Water 2', 'Water2', 12),
('Ditto', 'Ditto', 13),
('Dragon', 'Dragon', 14),
('No Eggs Discovered', 'Undiscovered', 15);

insert into "damage_class" ("name", "order")
values
('Physical', 0),
('Special', 1),
('Status', 2);

insert into `move_function` (`code`, `desc`)
values
('000', 'No additional effect.'),
('001', 'Does absolutely nothing.'),
('002', 'Ignores type effectiveness. User takes 25% of max HP as recoil damage.'),
('003', 'Inflicts sleep.'),
('004', 'Inflicts sleep one turn after use.'),
('005', 'Inflicts poison.'),
('006', 'Inflicts bad poison.'),
('007', 'Inflicts paralysis.'),
('008', 'Inflicts paralysis. Hits Pokémon using Fly, Bounce or Sky Drop. Has perfect accuracy in rain, but 50 accuracy in sun.'),
('009', 'Inflicts paralysis and flinch.'),
('00A', 'Inflicts burn.'),
('00B', 'Inflicts burn and flinch.'),
('00C', 'Inflicts freeze.'),
('00D', 'Inflicts freeze. Has perfect accuracy in hail.'),
('00E', 'Inflicts freeze and flinch.'),
('00F', 'Inflicts flinch.'),
('010', 'Inflicts flinch. Does double damage if target has used Minimize.'),
('011', 'Inflicts flinch. Fails unless user is asleep.'),
('012', 'Inflicts flinch. Fails unless it''s the user''s first turn on the field.'),
('013', 'Inflicts confusion.'),
('014', 'Inflicts confusion, but only if user is Chatot. Chance depends on the volume of Chatot''s cry.'),
('015', 'Inflicts confusion. Hits Pokémon using Fly, Bounce or Sky Drop. Has perfect accuracy in rain, but 50 accuracy in sun.'),
('016', 'Inflicts infatuation.'),
('017', 'Inflicts burn, freeze or paralysis.'),
('018', 'Cures user of burn, poison and paralysis.'),
('019', 'Cures all Pokémon in party of permanent status conditions.'),
('01A', 'Prevents Pokémon on the user''s side from being inflicted with status conditions.'),
('01B', 'Passes the user''s permanent status condition to the target.'),
('01C', 'Increases user''s Attack by 1 stage.'),
('01D', 'Increases user''s Defense by 1 stage.'),
('01E', 'Increases user''s Defense by 1 stage and curls user up (increasing power of Rollout).'),
('01F', 'Increases user''s Speed by 1 stage.'),
('020', 'Increases user''s Special Attack by 1 stage.'),
('021', 'Increases user''s Special Defense by 1 stage and doubles the power of the user''s next move if it is Electric-type.'),
('022', 'Increases user''s evasion by 1 stage.'),
('023', 'Increases user''s critical hit rate.'),
('024', 'Increases user''s Attack and Defense by 1 stage.'),
('025', 'Increases user''s Attack, Defense and accuracy by 1 stage.'),
('026', 'Increases user''s Attack and Speed by 1 stage.'),
('027', 'Increases user''s Attack and Special Attack by 1 stage.'),
('028', 'Increases user''s Attack and Special Attack by 1 stage, or 2 stages in sun.'),
('029', 'Increases user''s Attack and accuracy by 1 stage.'),
('02A', 'Increases user''s Defense and Special Defense by 1 stage.'),
('02B', 'Increases user''s Special Attack, Special Defense and Speed by 1 stage.'),
('02C', 'Increases user''s Special Attack and Special Defense by 1 stage.'),
('02D', 'Increases every stat of the user except HP, accuracy and evasion by 1 stage.'),
('02E', 'Increases user''s Attack by 2 stages.'),
('02F', 'Increases user''s Defense by 2 stages.'),
('030', 'Increases user''s Speed by 2 stages.'),
('031', 'Increases user''s Speed by 2 stages and halves the user''s weight.'),
('032', 'Increases user''s Special Attack by 2 stages.'),
('033', 'Increases user''s Special Defense by 2 stages.'),
('034', 'Increases user''s evasion by 2 stages and minimizes the user.'),
('035', 'Increases user''s Attack, Speed and Special Attack by 2 stages but decreases user''s Defense and Special Defense by 1 stage.'),
('036', 'Increases user''s Speed by 2 stages and Attack by 1 stage.'),
('037', 'Increases a random stat of the user other than HP, including accuracy and evasion, by 2 stages.'),
('038', 'Increases user''s Defense by 3 stages.'),
('039', 'Increases user''s Special Attack by 3 stages.'),
('03A', 'Maximises user''s Attack but removes 50% of user''s max HP.'),
('03B', 'Decreases user''s Attack and Defense by 1 stage.'),
('03C', 'Decreases user''s Defense and Special Defense by 1 stage.'),
('03D', 'Decreases user''s Defense, Special Defense and Speed by 1 stage.'),
('03E', 'Decreases user''s Speed by 1 stage.'),
('03F', 'Decreases user''s Special Attack by 2 stages.'),
('040', 'Increases target''s Special Attack by 1 stage, but confuses them.'),
('041', 'Increases target''s Attack by 2 stages, but confuses them.'),
('042', 'Decreases target''s Attack by 1 stage.'),
('043', 'Decreases target''s Defense by 1 stage.'),
('044', 'Decreases target''s Speed by 1 stage.'),
('045', 'Decreases target''s Special Attack by 1 stage.'),
('046', 'Decreases target''s Special Defense by 1 stage.'),
('047', 'Decreases target''s accuracy by 1 stage.'),
('048', 'Decreases target''s evasion by 1 stage.'),
('049', 'Decreases target''s evasion by 1 stage, removes all barriers on the target''s side, and removes any entry hazards from the field.'),
('04A', 'Decreases target''s Attack and Defense by 1 stage.'),
('04B', 'Decreases target''s Attack by 2 stages.'),
('04C', 'Decreases target''s Defense by 2 stages.'),
('04D', 'Decreases target''s Speed by 2 stages.'),
('04E', 'Decreases target''s Special Attack by 2 stages, if their gender is opposite to the user.'),
('04F', 'Decreases target''s Special Defense by 2 stages.'),
('050', 'Resets target''s stat changes.'),
('051', 'Resets stat changes for all Pokémon on the field.'),
('052', 'Swaps user''s and target''s Attack and Special Attack changes.'),
('053', 'Swaps user''s and target''s Defense and Special Defense changes.'),
('054', 'Swaps user''s and target''s stat changes.'),
('055', 'Copies target''s stat changes to user.'),
('056', 'Adds a barrier to the user''s side which prevents lowering of stats.'),
('057', 'Swaps user''s Attack and Defense.'),
('058', 'Averages user''s and target''s Attack and Special Attack.'),
('059', 'Averages user''s and target''s Defense and Special Defense.'),
('05A', 'Averages user''s and target''s current HP.'),
('05B', 'Adds an effect to the user''s side which doubles Speed.'),
('05C', 'Turns into the last move used by the target. Effect is removed when user leaves the field.'),
('05D', 'Permanently replaces itself with the last move used by the target.'),
('05E', 'Changes user''s type to that of a randomly-chosen move of the user other than this one.'),
('05F', 'Changes user''s type to a random type that resists the last attack used by the target.'),
('060', 'Changes user''s type to one depending on the environment.'),
('061', 'Makes target Water-type.'),
('062', 'Makes user same type as target.'),
('063', 'Makes target''s ability Simple.'),
('064', 'Makes target''s ability Insomnia.'),
('065', 'Makes user have same ability as target.'),
('066', 'Makes target have same ability as user.'),
('067', 'Swaps user''s and target''s abilities.'),
('068', 'Negates effect of target''s ability.'),
('069', 'Transforms user into target.'),
('06A', 'Does fixed 20 HP damage.'),
('06B', 'Does fixed 40 HP damage.'),
('06C', 'Halves target''s current HP.'),
('06D', 'Does fixed damage equal to user''s level.'),
('06E', 'Does fixed damage to make the user''s and target''s current HP equal.'),
('06F', 'Does fixed damage equal to between 0.5 and 1.5 times the user''s level, randomly determined.'),
('070', 'Deals a one-hit KO. Accuracy depends on difference between the user''s and target''s levels (higher user level = more accuracy, lower target level = more accuracy).'),
('071', 'If a physical move was used against the user this turn, deals 2x the damage from that move to the target.'),
('072', 'If a special move was used against the user this turn, deals 2x the damage from that move to the target.'),
('073', 'If a damaging move was used against the user this turn, deals 1.5x the damage from that move to the target.'),
('074', 'Damages ally for 1/16 of their max HP.'),
('075', 'Hits target using Dive with double the power.'),
('076', 'Hits target using Dig with double the power.'),
('077', 'Hits target using Bounce, Fly or Sky Drop with double the power.'),
('078', 'Hits target using Bounce, Fly or Sky Drop with double the power. Inflicts flinch.'),
('079', 'Has double power if target has used Fusion Flare this turn.'),
('07A', 'Has double power if target has used Fusion Bolt this turn.'),
('07B', 'Has double power if target is poisoned.'),
('07C', 'Has double power if target is paralyzed, but cures paralysis.'),
('07D', 'Has double power if target is asleep, but cures sleep.'),
('07E', 'Has double power if user is burned, poisoned or paralyzed.'),
('07F', 'Has double power if target is inflicted with a status condition.'),
('080', 'Has double power if target has no more than half of its max HP remaining.'),
('081', 'Has double power if user has been damaged by target''s move this turn.'),
('082', 'Has double power if target has already lost HP this turn.'),
('083', 'Has double power if ally has already used this move this turn, and hits directly after the ally''s move, ignoring priority.'),
('084', 'Has double power if target has already moved this turn.'),
('085', 'Has double power if a teammate fainted last turn.'),
('086', 'Has double power if user does not hold an item.'),
('087', 'Has double power in weather, with type depending on the type of weather.'),
('088', 'Hits target switching out with double the power.'),
('089', 'Power increases with user''s happiness.'),
('08A', 'Power decreases with user''s happiness.'),
('08B', 'Power increases with user''s HP.'),
('08C', 'Power increases with target''s HP.'),
('08D', 'Power increases the faster the target is compared to the user.'),
('08E', 'Power increases the more positive stat changes the user has.'),
('08F', 'Power increases the more positive stat changes the target has.'),
('090', 'Power and type depend on the user''s IVs.'),
('091', 'Power doubles with each consecutive use.'),
('092', 'Power increases with each consecutive use.'),
('093', 'Inflicts rage on the user, which increases their Attack by 1 stage every time they are damaged by a move.'),
('094', 'Randomly damages or heals the target.'),
('095', 'Power is randomly chosen. Hits target using Dig with double the power.'),
('096', 'Power and type depend on the user''s held berry, which is consumed.'),
('097', 'Power increases as this move''s PP decreases.'),
('098', 'Power decreases with user''s HP.'),
('099', 'Power increases the faster the user is compared to the target.'),
('09A', 'Power increases with the target''s weight.'),
('09B', 'Power increases the heavier the user is compared to the target.'),
('09C', 'Increases power of ally''s move by 1.5x for this turn.'),
('09D', 'Weakens Electric-type attacks.'),
('09E', 'Weakens Fire-type attacks.'),
('09F', 'Type depends on the user''s held item.'),
('0A0', 'Always critically hits.'),
('0A1', 'Adds an effect to the user''s side preventing critical hits from opponents.'),
('0A2', 'Adds a barrier to the user''s side halving power of physical moves used by opponents.'),
('0A3', 'Adds a barrier to the user''s side halving power of special moves used by opponents.'),
('0A4', 'Effect depends on environment.'),
('0A5', 'Never misses.'),
('0A6', 'Ensures that the user''s next move against the target will not miss.'),
('0A7', 'Makes any subsequent moves used by the user on the target ignore the target''s evasion change, and ignore the immunities of the Ghost type.'),
('0A8', 'Makes any subsequent moves used by the user on the target ignore the target''s evasion change, and ignore the immunities of the Dark type.'),
('0A9', 'Ignores target''s Defense, Special Defense and evasion changes.'),
('0AA', 'Protects the user from moves used by opponents.'),
('0AB', 'Protects the user''s side from priority moves.'),
('0AC', 'Protects the user''s side from multi-target moves.'),
('0AD', 'Hits protected target, and removes their protection.'),
('0AE', 'Uses last move used by target.'),
('0AF', 'Uses last move used by Pokémon on the field.'),
('0B0', 'Uses move target is set to use this turn, with 1.5x the power.'),
('0B1', 'For the duration of the current turn, reflects status moves targeting user to their users.'),
('0B2', 'For the duration of the current turn, negates the effect of any positive stat-changing moves used by any Pokémon on the field, and applies their effects to the user instead.'),
('0B3', 'Uses a move depending on the environment.'),
('0B4', 'Uses a random move known by the user.'),
('0B5', 'Uses a random move known by a teammate (other than the user themselves).'),
('0B6', 'Uses a random move.'),
('0B7', 'Adds a temporary status condition to the target which prevents them from using the same move twice in a row.'),
('0B8', 'Adds a temporary status condition to the target which disables any moves known by the user.'),
('0B9', 'Adds a temporary status condition to the target which disables the last move they used.'),
('0BA', 'Adds a temporary status condition to the target which prevents them from using non-damaging moves.'),
('0BB', 'Adds a temporary status condition to the target which prevents them from using healing moves.'),
('0BC', 'Adds a temporary status condition to the target which forces them to repeat the last move used.'),
('0BD', 'Hits twice.'),
('0BE', 'Hits twice. Inflicts poison.'),
('0BF', 'Hits three times, with power depending on the number of hits.'),
('0C0', 'Hits a random number of times, between 2 and 5.'),
('0C1', 'Hits as many times as there are status-free teammates, with base power of each hit depending on the teammate''s Attack.'),
('0C2', 'User must recharge after successful use.'),
('0C3', 'User must wait a turn before use.'),
('0C4', 'User must wait a turn before use, except in sun. Power is halved in weather other than sun.'),
('0C5', 'User must wait a turn before use. Inflicts paralysis.'),
('0C6', 'User must wait a turn before use. Inflicts burn.'),
('0C7', 'User must wait a turn before use. Inflicts flinch.'),
('0C8', 'Increases user''s Defense by 1 stage on the first turn after use, then hits on the second turn.'),
('0C9', 'User must wait a turn before use, but is in the sky and invulnerable to most attacks during that turn.'),
('0CA', 'User must wait a turn before use, but is underground and invulnerable to most attacks during that turn.'),
('0CB', 'User must wait a turn before use, but is underwater and invulnerable to most attacks during that turn.'),
('0CC', 'User must wait a turn before use, but is in the sky and invulnerable to most attacks during that turn. Inflicts paralysis.'),
('0CD', 'User must wait a turn before use, but is invulnerable during that turn. Hits protected target and removes their protection.'),
('0CE', 'User must wait a turn before use. Both user and target are in the sky and invulnerable to most attacks during that turn; target is also unable to move. If target is airborne, does not deal damage.'),
('0CF', 'Traps target temporarily, dealing 1/16 max HP per turn.'),
('0D0', 'Traps target temporarily, dealing 1/16 max HP per turn. Hits target using Dive with double power.'),
('0D1', 'User is locked into this move for 2 more turns. No Pokémon on the field can sleep during this time.'),
('0D2', 'User is locked into this move temporarily, and is confused afterwards.'),
('0D3', 'User is locked into this move for 4 more turns, with power doubling with each successive hit, or if user has used Defense Curl.'),
('0D4', 'User waits two turns, then deals 2x the damage it received to the last Pokémon that damaged it.'),
('0D5', 'User heals by 1/2 max HP.'),
('0D6', 'User heals by 1/2 max HP and loses Flying-type for this turn.'),
('0D7', 'Pokémon in user''s position is healed by 1/2 max HP at the end of the next turn.'),
('0D8', 'User heals by an amount depending on the weather.'),
('0D9', 'User heals fully and falls asleep.'),
('0DA', 'Adds a temporary status condition to the user which heals them for 1/16 max HP per turn.'),
('0DB', 'Adds a temporary status condition to the user which heals them for 1/16 max HP per turn, but prevents them from leaving the field.'),
('0DC', 'Inflicts Leech Seed on the target.'),
('0DD', 'User heals by 1/2 damage dealt.'),
('0DE', 'User heals by 1/2 damage dealt. Fails if target is not asleep.'),
('0DF', 'Target heals by 1/2 max HP.'),
('0E0', 'User faints.'),
('0E1', 'Deals fixed damage to user''s current HP. User faints.'),
('0E2', 'Decreases target''s Attack and Special Attack by 2 stages. User faints.'),
('0E3', 'User faints and fully heals replacement (HP and status).'),
('0E4', 'User faints and fully heals replacement (HP, PP and status).'),
('0E5', 'Inflicts a temporary status condition to all Pokémon on the field which will make them faint in 3 turns.'),
('0E6', 'If user faints before their next move, the attack that caused it loses all of its PP.'),
('0E7', 'If user faints before their next move, the Pokémon that caused it also faints.'),
('0E8', 'If user would faint this turn, they survive with 1 HP instead.'),
('0E9', 'If target would faint from the hit, they survive with 1 HP instead.'),
('0EA', 'User flees.'),
('0EB', 'Target flees or switches out if not at higher level than user (status move).'),
('0EC', 'Target flees or switches out if not at higher level than user (damaging move).'),
('0ED', 'User switches out but passes on stat changes and temporary status conditions to their replacement.'),
('0EE', 'User switches out after dealing damage, even if trapped.'),
('0EF', 'Traps target as long as user remains on field.'),
('0F0', 'Removes target''s held item.'),
('0F1', 'Steals target''s held item.'),
('0F2', 'Swaps user''s and target''s held items.'),
('0F3', 'Gives held item to target.'),
('0F4', 'Consumes target''s berry, granting its effect to the user.'),
('0F5', 'Destroys target''s berry.'),
('0F6', 'User regains the last held item they consumed.'),
('0F7', 'Flings held item at the target, with power and effect depending on the item.'),
('0F8', 'Adds a temporary status condition to the target which negates the effect of their held item and prevents them from using the held item or having an item used on them.'),
('0F9', 'Adds an effect to both sides of the field which negates the effect of held items and prevents their use.'),
('0FA', 'Inflicts recoil damage on user equal to 1/4 damage dealt.'),
('0FB', 'Inflicts recoil damage on user equal to 1/3 damage dealt.'),
('0FC', 'Inflicts recoil damage on user equal to 1/2 damage dealt.'),
('0FD', 'Inflicts recoil damage on user equal to 1/3 damage dealt. Inflicts paralysis.'),
('0FE', 'Inflicts recoil damage on user equal to 1/3 damage dealt. Inflicts burn.'),
('0FF', 'Makes the weather sunny.'),
('100', 'Makes the weather rainy.'),
('101', 'Starts a sandstorm.'),
('102', 'Starts hail.'),
('103', 'Lays Spikes on the opposing side.'),
('104', 'Lays Toxic Spikes on the opposing side.'),
('105', 'Lays Stealth Rock on the opposjng side.'),
--- I started giving up on giving them meaningful names here
-- TODO
('106', 'Grass Pledge'),
('107', 'Fire Pledge'),
('108', 'Water Pledge'),
('109', 'Pay Day'),
('10A', 'Destroys barriers on target''s side of the field.'),
('10B', 'User is damaged by 1/2 max HP if this move misses.'),
('10C', 'Substitute'),
('10D', 'Curse'),
('10E', 'Removes 4 PP from last move used by target.'),
('10F', 'Inflcits a temporary status condition on the target that removes 1/4 of their max HP per turn, but only while they are asleep.'),
('110', 'Removes traps, entry hazards and Leech Seed from user and user''s side.'),
('111', 'Hits 2 turns later; user can still move meanwhile.'),
('112', 'Adds a stockpile.'),
('113', 'Power depends on the user''s stockpile level, which is reset to 0.'),
('114', 'Heals user for amount depending on their stockpile level, which is reset to 0.'),
('115', 'Only hits if user is not hit by a damaging move this turn.'),
('116', 'Only hits if target has not already moved this turn and has chosen a damaging move.'),
('117', 'For the duration of the current turn, any single-target moves will hit the user.'),
('118', 'Adds gravity to the field.'),
('119', 'Makes user airborne temporarily.'),
('11A', 'Makes user airborne, but also makes all attacks against them never miss.'),
('11B', 'Hits targets using Fly, Bounce or Sky Drop.'),
('11C', 'Grounds the target. Hits targets using Fly, Bounce or Sky Drop, and cancels Fly or Bounce.'),
('11D', 'Makes target move immediately after the user.'),
('11E', 'Makes target move last this turn.'),
('11F', 'Trick Room'),
('120', 'Ally Switch'),
('121', 'Use target''s Attack rather than user''s.'),
('122', 'Use target''s Defense rather than its Special Defense.'),
('123', 'Only damages Pokémon that share a type with the user.'),
('124', 'Wonder Room'),
('125', 'Fails unless user has used every other move it knows.'),
('133', 'King''s Shield'),
('134', 'Electric Terrain'),
('135', 'Grassy Terrain'),
('136', 'Misty Terrain'),
('137', 'Flying Press'),
('138', 'Decreases target''s Attack and Special Attack by 1 stage.'),
('139', 'Heals user for 0.75x damage dealt.'),
('140', 'Spiky Shield'),
('13A', 'Increases target''s Special Defense by 1 stage.'),
('13B', 'Decreases target''s Special Attack by 2 stages.'),
('13C', 'Belch'),
('13D', 'Parting Shot'),
('13E', 'Geomancy'),
('13F', 'Venom Drench'),
('141', 'Sticky Web'),
('142', 'Topsy-Turvy'),
('143', 'Forest''s Curse'),
('144', 'Trick or Treat'),
('145', 'Fairy Lock'),
('146', 'Magnetic Flux'),
('147', 'Fell Stinger'), -- when we omitted this row, we got an inscrutable "returned NULL without setting exception" error; somehow it failed to say anything about the obvious bad foreign key ref
('148', 'Ion Deluge'),
('149', 'Crafty Shield'),
('150', 'Flower Shield'),
('151', 'Rototiller'),
('152', 'Powder'),
('153', 'Electrify'),
('154', 'Mat Block'),
('155', 'Thousand Waves'),
('156', 'Thousand Arrows NOT USED'),
('157', 'Hyperspace Hole'),
('158', 'Oblivion Wing NOT USED'),
('159', 'Hyperspace Fury'),
('15A', 'Dummy'),
('15B', 'Aurora Veil'),
('15C', 'Baneful Bunker'),
('15D', 'Beak Blast'),
('15E', 'Burn Up'),
('15F', 'Spread move'),
('160', 'Core Enforcer'),
('161', 'First Impression'),
('162', 'Floral Healing'),
('163', 'Gear Up'),
('164', 'Instruct'),
('165', 'Laser Focus'),
('166', 'Sunsteel Strike/Moongeist Beam'),
('167', 'Pollen Puff'),
('168', 'Psychic Terrain'),
('169', 'Purify'),
('16A', 'RevelationDance'),
('16B', 'Shell Trap'),
('16C', 'Shore Up'),
('16D', 'Sparkling Aria'),
('16E', 'Spectral Thief'),
('16F', 'Speed Swap'),
('170', 'Spotlight'),
('171', 'Stomping Tantrum'),
('172', 'Strength Sap'),
('173', 'Throat Chop'),
('174', 'Toxic Thread'),
('175', 'Mind Blown'),
('176', 'Photon Geyser'),
('177', 'Plasma Fists'),
('178', 'Dynamax Cannon'),
('179', 'Snipe Shot'),
('17A', 'Stuff Cheeks'),
('17B', 'No Retreat'),
('17C', 'Tar Shot'),
('17D', 'Magic Powder'),
('17E', 'Dragon Darts'),
('17F', 'Teatime'),
('180', 'Octolock'),
('181', 'Fishious Rend'),
('182', 'Court Change'),
('183', 'Clangorous Soul'),
('184', 'Body Press'),
('185', 'Decorate'),
('186', 'Aura Wheel'),
('187', 'Life Dew'),
('188', 'Obstruct');

insert into `move_target` (`code`, `desc`)
values
('00', 'Single target'),
('01', 'No target'),
('02', 'Single opponent selected randomly'),
('04', 'All opponents'),
('08', 'All available targets other than self'),
('10', 'Self'),
('20', 'Both sides'),
('40', 'User''s side'),
('80', 'Opponent''s side'),
('100', 'Ally'),
('200', 'Ally or self'),
('400', 'Single opponent'),
('800', 'Single opponent directly opposite user');

insert into `move_flag` (`code`, `desc`)
values
('a', 'Makes physical contact'),
('b', 'Can be protected against by Protect/Detect'),
('c', 'Can be reflected by Magic Coat'),
('d', 'Can be Snatched'),
('e', 'Can be copied by Mirror Move'),
('f', 'May inflict flinch if the user holds King''s Rock or Razor Fang'),
('g', 'If used when frozen, thaws user out'),
('h', 'Has a high critical hit chance'),
('i', 'Is a biting move'),
('j', 'Is a punching move'),
('k', 'Is a sound move'),
('l', 'Is a powder move'),
('m', 'Is a pulse move'),
('n', 'Is an explosive move');

insert into "pocket" ("name", "code")
values	
('Items', 1),
('Medicine', 2),
('Poké Balls', 3),
('TMs & HMs', 4),
('Berries', 5),
('Mail', 6),
('Battle Items', 7),
('Key Items', 8);

insert into `item_out_battle_usability` (`name`, `code`, `desc`)
values
('None', 0, 'Cannot be used outside of battle.'),
('PokemonOnce', 1, 'Can be used outside of battle on a Pokémon in the party. Is consumed on use.'),
('DirectOnce', 2, 'Can be used outside of battle. Is used directly, without requiring the user to select a Pokémon in the party. Is consumed on use.'),
('TM', 3, 'Can be used outside of battle to teach a move to a Pokémon in the party. Is consumed on use.'),
('HM', 4, 'Can be used outside of battle to teache a move to a Pokémon in the party. Is not consumed on use.'),
('PokemonReusable', 5, 'Can be used outside of battle on a Pokémon in the party. Is not consumed on use.');

insert into `item_in_battle_usability` (`name`, `code`, `desc`)
values
('None', 0, 'Cannot be used in battle.'),
('PokemonOnce', 1, 'Can be used in battle on a Pokémon in the party. Is consumed on use.'),
('DirectOnce', 2, 'Can be used in battle. Is used directly, without requiring the user to select a Pokémon in the party. Is consumed on use.'),
('PokemonReusable', 3, 'Can be used in battle on a Pokémon in the party. Is not consumed on use.'),
('DirectReusable', 4, 'Can be used in battle. Is used directly, without requiring the user to select a Pokémon in the party. Is not consumed on use.');

insert into `item_type` (`name`, `code`)
values
('Other', 0),
('Mail', 1),
('Mail2', 2),
('SnagBall', 3),
('PokeBall', 4),
('Berry', 5),
('KeyItem', 6),
('EvolutionStone', 7),
('Fossil', 8),
('Apricorn', 9),
('Gem', 10),
('Mulch', 11),
('MegaStone', 12);

insert into "type_slot" ("index")
values
(1),
(2);

insert into "ability_slot" ("index", "name")
values
(1, 'First'),
(2, 'Second'),
(3, 'Hidden');

insert into "wild_held_item_rarity" ("name", "order", "percentage")
values
('Always held', 0, 100),
('Common', 1, 50),
('Uncommon', 2, 5),
('Rare', 3, 1);

insert into "stat" ("id", "name", "order")
values
('HP', 'HP', 0),
('ATK', 'Attack', 1),
('DEF', 'Defense', 2),
('SPD', 'Speed', 3),
('SA', 'Special Attack', 4),
('SD', 'Special Defense', 5);

insert into "time_of_day" ("name", "desc", "order", "range_desc")
values
('Day', 'day', 1, '6am–8pm'),
('Morning', 'morning', 2, '6am–noon'),
('DayNotMorning', 'day (not morning)', 3, 'noon-8pm'),
('DayNotDusk', 'day (not dusk)', 4, '6am-5pm and 6pm–8pm'),
('Dusk', 'dusk', 5, '5pm–6pm'),
('Night', 'night', 6, '8pm–6am');

insert into "gender" ("name", "code")
values
('Male', 0),
('Female', 1),
('Genderless', 2),
('Same as player', 3);

insert into "weather" ("name", "desc", "order")
values
('Rain', 'rain', 1),
('Storm', 'a storm', 3),
('Snow', 'snow', 5),
('Sandstorm', 'a sandstorm', 4),
('Sunny', 'sun', 0),
('HeavyRain', 'heavy rain',2),
('Blizzard', 'a blizzard', 6);

insert into `evolution_base_method` (`name`)
values
('level'),
('item'),
('trade');

insert into `evolution_requirement_kind` (`name`)
values
('level'),
('item'),
('friendship'),
('held_item'),
('time'),
('stat_cmp'),
('coin_flip'),
('leftover'),
('gender'),
('teammate'),
('move'),
('map'),
('trademate'),
('teammate_type'),
('cancel'),
('move_type'),
('weather');

insert into "terrain" ("name", "order")
values
('Grass', 0),
('Cave', 1),
('Water', 2);

insert into `encounter_method` (`name`, `order`, `desc`)
values
('Land', 0, 'Grass'),
('LandMorning', 1, 'Grass (morning)'),
('LandDay', 2, 'Grass (day)'),
('LandNight', 3, 'Grass (night)'),
('HeadbuttHigh', 4, 'Headbutt'),
('HeadbuttLow', 5, 'Headbutt'),
('Cave', 6, 'Cave'),
('RockSmash', 7, 'Rock Smash'),
('OldRod', 8, 'Old Rod'),
('GoodRod', 9, 'Good Rod'),
('SuperRod', 10, 'Super Rod'),
('Water', 11, 'Surf');

insert into "nature" ("increased_stat", "decreased_stat", "id", "name", "code")
values
('ATK', 'ATK', 'HARDY', 'Hardy', 0),
('ATK', 'DEF', 'LONELY', 'Lonely', 1),
('ATK', 'SPD', 'BRAVE', 'Brave', 2),
('ATK', 'SA', 'ADAMANT', 'Adamant', 3),
('ATK', 'SD', 'NAUGHTY', 'Naughty', 4),
('DEF', 'ATK', 'BOLD', 'Bold', 5),
('DEF', 'DEF', 'DOCILE', 'Docile', 6),
('DEF', 'SPD', 'RELAXED', 'Relaxed', 7),
('DEF', 'SA', 'IMPISH', 'Impish', 8),
('DEF', 'SD', 'LAX', 'Lax', 9),
('SPD', 'ATK', 'TIMID', 'Timid', 10),
('SPD', 'DEF', 'HASTY', 'Hasty', 11),
('SPD', 'SPD', 'SERIOUS', 'Serious', 12),
('SPD', 'SA', 'JOLLY', 'Jolly', 13),
('SPD', 'SD', 'NAIVE', 'Naive', 14),
('SA', 'ATK', 'MODEST', 'Modest', 15),
('SA', 'DEF', 'MILD', 'Mild', 16),
('SA', 'SPD', 'QUIET', 'Quiet', 17),
('SA', 'SA', 'BASHFUL', 'Bashful', 18),
('SA', 'SD', 'RASH', 'Rash', 19),
('SD', 'ATK', 'CALM', 'Calm', 20),
('SD', 'DEF', 'GENTLE', 'Gentle', 21),
('SD', 'SPD', 'SASSY', 'Sassy', 22),
('SD', 'SA', 'CAREFUL', 'Careful', 23),
('SD', 'SD', 'QUIRKY', 'Quirky', 24);

insert into "move_slot" ("index")
values
(0),
(1),
(2),
(3);

insert into `item` (`id`, `name`, `code`, `pocket`, `buy_price`, `desc`, `out_battle_usability`, `in_battle_usability`, `type`)
values
('DUMMY', 'DUMMY', 0, 'Items', 0, 'DUMMY', 'None', 'None', 'Other');

insert into "field_effect" ("code", "name", "backdrop")
values
(1, 'Electric Terrain', 'Electric')
,(2, 'Grassy Terrain', 'Grassy')
,(3, 'Misty Terrain', 'Misty')
,(4, 'Dark Crystal Cavern', 'DarkCrystalCavern')
,(5, 'Chess Board', 'Chess')
,(6, 'Big Top Arena', 'BigTop')
,(7, 'Burning Field', 'Burning')
,(8, 'Swamp Field', 'Swamp')
,(9, 'Rainbow Field', 'Rainbow')
,(10, 'Corrosive Field', 'Corrosive')
,(11, 'Corrosive Mist Field', 'CorrosiveMist')
,(12, 'Desert Field', 'Desert')
,(13, 'Icy Field', 'Icy')
,(14, 'Rocky Field', 'Rocky')
,(15, 'Forest Field', 'Forest')
,(16, 'Super-heated Field', 'Superheated')
,(17, 'Factory Field', 'Factory')
,(18, 'Short-circuit Field', 'Shortcircuit')
,(19, 'Wasteland', 'Wasteland')
,(20, 'Ashen Beach', 'AshenBeach')
,(21, 'Water Surface', 'WaterSurface')
,(22, 'Underwater', 'Underwater')
,(23, 'Cave', 'Cave')
,(24, 'Glitch Field', 'Glitch')
,(25, 'Crystal Cavern', 'CrystalCavern')
,(26, 'Murkwater Surface', 'MurkwaterSurface')
,(27, 'Mountain', 'Mountain')
,(28, 'Snowy Mountain', 'SnowyMountain')
,(29, 'Holy Field', 'Holy')
,(30, 'Mirror Arena', 'Mirror')
,(31, 'Fairy Tale Field', 'FairyTale')
,(32, 'Dragon''s Den', 'DragonsDen')
,(33, 'Flower Garden Field', 'FlowerGarden0')
,(34, 'Starlight Arena', 'Starlight')
,(35, 'New World', 'NewWorld')
,(36, 'Inverse Field', 'Inverse')
,(37, 'Psychic Terrain', 'Psychic');
